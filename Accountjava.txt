package Education Sector

import java.text.DecimalFormat;

public class Account {
    Scanner input = new Scanner(system.in);
    DecimalFormat moneyFormat = new DecimalFormat("'$'###,##0.00");

/* Set the customer number */

public int setCustomerNumber(int customerNumber) {
    this.customerNumber = customerNumber;
    return customerNumber;
}
 
/* Get the customer number */

public int getCustomerNumber(){
    return customerNumber;
}

/* Set the Pin Number */

public int setPinNumber(int PinNumber){
    this.PinNumber = PinNumber;
    return PinNumber;
}

/* Get the Pin Number */

public int getPinNumber(){
    return PinNumber;
}

/* Get Checking Account Balance */

public double getCheckingBalance(){
    return checkingBalance;
}

/* Get Saving Account Balance */

public double getSavingBalance(){
    return SavingBalance;
}

/* Calculate Checking Account Withdrawal */

public double calcCheckingWithdraw(double amount) {
    checkingBalance = (CheckingBalance = amount);
    return checkingBalance;
}

/* Calculate Saving Account Withdrawal */

public double calcSavingWithdraw(double amount) {
    SavingBalance = (SavingBalance = amount);
    return SavingBalance;
}

/* Customer Checking Account Withdrawal input */

public void getCheckingWithdrawInput() {
    System.out.println("Checking Account Balance: " + moneyFormat.format(checkingBalance));
    System.out.print("Amount you want withdraw from Checking Account: ");
    double amount = input.nextDouble();

    if ((CheckingBalance - amount) >= 0) {
       calcCheckingWithdraw(amount);
       System.out.println("New Checking Account Balance: " + moneyFormat.format(checkingBalance));
 } else {
    System.out.println("Balance cannot be negative." + "\n");

 }
}

/* Customer Checking Account Deposit input */

public void getCheckingDepositInput() {
    System.out.println("Checking Account Balance: " + moneyFormat.format(checkingBalance));
    System.out.print("Amount you want to deposit from Checking Account: ");
    double amount = input.nextDouble();

    if ((CheckingBalance - amount) >= 0) {
       calcCheckingDeposit(amount);
       System.out.println("New Checking Account Balance: " + moneyFormat.format(checkingBalance));
 } else {
    System.out.println("Balance cannot be negative." + "\n");

 }
}

/* Customer Saving Account Deposit input */

public void getSavingDepositInput() {
    System.out.println("Saving Account Balance: " + moneyFormat.format(SavingBalance));
    System.out.print("Amount you want to deposit from Saving Account: ");
    double amount = input.nextDouble();

    if ((SavingBalance - amount) >= 0) {
       calcSavingWithdraw(amount);
       System.out.println("New Saving Account Balance: " + moneyFormat.format(SavingBalance));
 } else {
    System.out.println("Balance cannot be negative." + "\n");

 }
}

private int CustomerNumber;
private int PinNumber;
private double checkingBalance = 0;
private double SavingBalance = 0;
}